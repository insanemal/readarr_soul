---
name: Semantic Release

on:
  push:
    branches:
      - main
      - beta
  workflow_dispatch:

jobs:
  code-quality:
    name: üìä Check code quality
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run containers
        run: docker-compose -f .ci/docker-compose.yml up -d
      - name: Add hosts
        run: |
          sudo echo "127.0.0.1 sonarr readarr radarr lidarr prowlarr deluge jackett" | sudo tee -a /etc/hosts
      - name: sleep 30s for containers to start-up
        run: sleep 30s
        shell: bash
      - name: check ports are mapped
        run: docker ps
      - name: check one of the containers is up
        run: curl http://radarr:7878
      - name: üß™ Check tests are passing
        run: |
          pip install poetry nox
          nox -s tests
  release:
    name: Create release and publish üêç distribution üì¶ to PyPI
    needs: [code-quality]
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry nox
        npm install @semantic-release/changelog
        npm install @semantic-release/exec
        npm install @semantic-release/git
        npm install @semantic-release/github
        npm install conventional-changelog-conventionalcommits@7.0.2
        npm install semantic-release-pypi

    - name: Run Release
      run: |
        nox -rs release -- "$PYPI_PASSWORD"
      env:
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: üè∑Ô∏è Update latest tag
      uses: EndBug/latest-tag@latest
