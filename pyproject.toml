[tool.poetry]
name = "pyarr"
version = "5.2.0"
description = "Synchronous Sonarr, Radarr, Lidarr and Readarr API's for Python"
authors = ["Steven Marks <marksie1988@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
keywords = ["sonarr", "radarr", "readarr", "lidarr", "api", "wrapper", "plex"]
homepage = "https://github.com/totaldebug/pyarr"
repository = "https://github.com/totaldebug/pyarr"
documentation = "https://docs.totaldebug.uk/pyarr"

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    {include = "pyarr"},
    {include = "pyarr/py.typed"}
]

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.28.2"
types-requests = "^2.28.11.17"
overrides = "^7.3.1"

[tool.poetry.group.dev.dependencies]
black = {version = "^24.3.0", allow-prereleases = true}
flake8 = "^7.0.0"
isort = "^5.12.0"
mypy = "^1.10.0"
pre-commit = "^3.7.1"
interrogate = "^1.5.0"
Sphinx = "^7.3.7"
sphinx-argparse = "^0.4.0"
sphinx-autobuild = "^2024.4.16"
sphinx-rtd-theme = "^2.0.0"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pylint = "^3.2.2"
responses = "^0.25.0"
autoflake = "^2.3.1"
ipykernel = "^6.22.0"
sphinx-toolbox = "^3.4.0"
enum-tools = "^0.12.0"
pytest-rerunfailures = "^14.0"
nox = "^2024.4.15"
toml = "^0.10.2"
commitizen = "^3.27.0"

[tool.black]
line-length = 88
target_version = ['py310']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | \.cache
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "pyarr"
disallow_untyped_defs = true

[tool.isort]
profile = "black"
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
known_first_party = [
    "pyarr",
    "tests",
]
forced_separate = [
    "tests",
]
skip = [".cache", ".nox"]
combine_as_imports = true

[tool.autoflake]
check = true
remove-unused-variables = true
remove-all-unused-imports = true
remove-duplicate-keys = true

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 100
exclude = ["noxfile.py", "docs", "build", ".devcontainer", ".nox", ".cache", "tests"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 0
quiet = false
color = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
